{"version":3,"sources":["pages/SignUpForm.js","pages/SignInForm.js","App.js","serviceWorker.js","navbar.js","pages/Home.js","pages/About.js","pages/Welcome.js","index.js"],"names":["SignUpForm","state","email","password","name","hasAgreed","handleChange","bind","handleSubmit","e","target","value","type","checked","this","setState","preventDefault","console","log","className","onSubmit","htmlFor","id","placeholder","onChange","to","Component","SignInForm","setusername","event","setpassword","move","props","history","push","window","alert","onClick","PageForm","src","alt","activeClassName","exact","path","component","Boolean","location","hostname","match","Navbar","class","OnNav","About","nav","welcome","ReactDOM","render","App","Home","Welcome","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.86b18f11.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SignUpForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            name: '',\n            hasAgreed: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log('The form was submitted with the following data:');\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n        <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\">\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\"\n                >\n                  Full Name\n                </label>\n                <input type=\"text\" \n                 id=\"name\" \n                 className=\"FormField__Input\" \n                 placeholder=\"Enter your full name\" \n                 name=\"name\" value={this.state.name} \n                 onChange={this.handleChange} \n                />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\"\n                >\n                  Password\n                </label>\n                <input type=\"password\" \n                 id=\"password\" \n                 className=\"FormField__Input\" \n                 placeholder=\"Enter your password\" \n                 name=\"password\" value={this.state.password} \n                 onChange={this.handleChange} \n                />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\"\n                >\n                  E-Mail Address\n                </label>\n                <input type=\"email\" \n                 id=\"email\" \n                 className=\"FormField__Input\" \n                 placeholder=\"Enter your email\" \n                 name=\"email\" value={this.state.email} \n                 onChange={this.handleChange} \n                />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__CheckboxLabel\">\n                    <input className=\"FormField__Checkbox\" \n                     type=\"checkbox\" \n                     name=\"hasAgreed\" \n                     value={this.state.hasAgreed}\n                     onChange={this.handleChange} \n                    /> \n                      I agree all statements in \n                    {/* <a href=\"\" className=\"FormField__TermsLink\"\n                    > */}\n                      terms of service\n                    {/* </a> */}\n                </label>\n              </div>\n              <div className=\"FormField\">\n                  <button className=\"FormField__Button mr-20\"\n                  >\n                    Sign Up\n                  </button> \n                  <Link to=\"/sign-in\" className=\"FormField__Link\"\n                  >\n                    I'm already member\n                  </Link>\n              </div>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SignInForm extends Component {\n  state = {\n\t\tname: '',\n\t\tpassword: ''\n\t};\n\tsetusername = (event) => {\n\t\tconsole.log('email', this.state.email);\n\t\tthis.setState({ email: event.target.value });\n\t};\n\tsetpassword = (event) => {\n\t\tthis.setState({ password: event.target.value });\n\t};\n\tmove = (event) => {\n\t\tif (this.state.email === 'xyz@yahoo.com' && this.state.password === '7890') {\n\t\t\tthis.props.history.push('/welcome');\n\t\t} else {\n\t\t\twindow.alert('Incorrect username or  password');\n\t\t}\n\t\tevent.preventDefault();\n\t};\n  \n    render() {\n        return (\n        <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" >\n            <div className=\"FormField\">\n                <label className=\"FormField__Label\" \n                 htmlFor=\"email\"\n                >\n                  E-Mail Address\n                </label>\n                <input type=\"email\"\n                 id=\"email\" \n                 className=\"FormField__Input\" \n                 placeholder=\"Enter your email\" \n                onChange={(event) => this.setusername(event)}\n                />\n            </div>\n            <div className=\"FormField\">\n                <label className=\"FormField__Label\" \n                 htmlFor=\"password\"\n                >\n                  Password\n                </label>\n                <input type=\"password\" \n                 id=\"password\" \n                 className=\"FormField__Input\" \n                 placeholder=\"Enter your password\" \n                 onChange={(event) => this.setpassword(event)}\n                />\n            </div>\n            <div className=\"FormField\">\n                 <button onClick={(event) => this.move(event)} className=\"FormField__Button mr-20\" \n                 >\n                    Sign In\n                 </button> \n                 <Link to=\"/\" className=\"FormField__Link\"\n                 >\n                    Create an account\n                 </Link>\n            </div>\n          </form>\n        </div>\n      );\n    }\n}\n\nexport default SignInForm;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport SignUpForm from \"./pages/SignUpForm\";\nimport SignInForm from \"./pages/SignInForm\";\nimport \"./App.css\";\n\nclass PageForm extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App__Aside\">\n          <img src=\"/images/logolog.jpg\" alt=\"\" className=\"Secure\"></img>\n        </div>\n        <div className=\"App__Form\">\n          <div className=\"PageSwitcher\">\n            <Link\n              to=\"/auth/sign-in\"\n              activeClassName=\"PageSwitcher__Item--Active\"\n              className=\"PageSwitcher__Item\"\n            >\n              Sign In\n            </Link>\n            <Link\n              exact\n              to=\"/\"\n              activeClassName=\"PageSwitcher__Item--Active\"\n              className=\"PageSwitcher__Item\"\n            >\n              Sign Up\n            </Link>\n          </div>\n          <div className=\"FormTitle\">\n            <Link\n              to=\"/auth/sign-in\"\n              activeClassName=\"FormTitle__Link--Active\"\n              className=\"FormTitle__Link\"\n            >\n              Sign In\n            </Link>{\" \"}\n            or\n            <Link\n              exact\n              to=\"/auth/sign-up\"\n              activeClassName=\"FormTitle__Link--Active\"\n              className=\"FormTitle__Link\"\n            >\n              Sign Up\n            </Link>\n          </div>\n          <Route\n            exact\n            path={[\"/auth\", \"/auth/sign-in\"]}\n            component={SignInForm}\n          ></Route>\n          <Route  path=\"/auth/sign-up\" component={SignUpForm}></Route>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PageForm;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport \"./navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <header>\r\n                    <nav class=\"fill\">\r\n                        <ul>\r\n                          <img src=\"/images/logo.png\" alt=\"logo\" className=\"img\"></img>\r\n                            <li>\r\n                                <button name=\"profile\"onClick={name => this.props.OnNav(name)}>\r\n                                    Profile\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button name=\"home\" onClick={name => this.props.OnNav(name)}>\r\n                                   Home\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button name=\"about\" onClick={name => this.props.OnNav(name)}>\r\n                                    About\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Navbar;","import React, { Component } from 'react';\nimport Nav from '../navbar';\n\nclass About extends Component {\n     state = {}\n     nav = (event) => {\n      if (event.target.name === 'profile') {\n          this.props.history.push('/welcome');\n       }else if (event.target.name === 'home') {\n          this.props.history.push('/home') \n       }else if (event.target.name === 'about') {\n           this.props.history.push('/about')\n       }\n  }\n\n  render() { \n    return (  \n       <div>\n          <Nav OnNav={this.nav} />\n\t\t\t\t  <h1>Home</h1>\n       </div>\n    );\n  }\n}\n \nexport default About;\n\n// export default class About extends React.Component {\n//   onNavigateHome = () => {};\n\n//   render() {\n//     return (\n//       <div>\n//         <h3>The About Page</h3>\n//         <p>About Id: </p>\n//         <button onClick={this.onNavigateHome} className=\"btn btn-primary\">\n//           Go Home!\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n","import React, { Component } from 'react';\nimport Nav from '../navbar';\n\nclass About extends Component {\n     state = {}\n     nav = (event) => {\n      if (event.target.name === 'profile') {\n          this.props.history.push('/welcome');\n       }else if (event.target.name === 'home') {\n          this.props.history.push('/home') \n       }else if (event.target.name === 'about') {\n           this.props.history.push('/about')\n       }\n  }\n\n\n  render() { \n    return (  \n       <div>\n          <Nav OnNav={this.nav} />\n\t\t\t\t  <h1>About</h1>\n       </div>\n    );\n  }\n}\n \nexport default About;\n\n// export default class About extends React.Component {\n//   onNavigateHome = () => {};\n\n//   render() {\n//     return (\n//       <div>\n//         <h3>The About Page</h3>\n//         <p>About Id: </p>\n//         <button onClick={this.onNavigateHome} className=\"btn btn-primary\">\n//           Go Home!\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n","import React, { Component } from 'react';\r\nimport Nav from '../navbar';\r\n\r\nclass welcome extends Component {\r\n    state = {  }\r\n    nav = (event) => {\r\n        if (event.target.name === 'profile') {\r\n            this.props.history.push('/welcome');\r\n         }else if (event.target.name === 'home') {\r\n            this.props.history.push('/home') \r\n         }else if (event.target.name === 'about') {\r\n             this.props.history.push('/about')\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                 <Nav OnNav={this.nav} />\r\n                 <h1>Welcome</h1>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default welcome;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Routes from \"./Route/routes\";\nimport SignUpForm from \"./pages/SignUpForm\";\nimport SignInForm from \"./pages/SignInForm\";\n// import { Dashboard } from \"./dashboard/Dashboard\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Welcome from \"./pages/Welcome\"\n\n\nReactDOM.render(\n  <div>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/auth\" />} />\n        <Route exact path={\"/auth\"} component={App}></Route>\n        {/* <Route exact path=\"/dashboard\" component={Dashboard}></Route> */}\n        <Route exact path=\"/home\" component={Home}></Route>\n        <Route exact path=\"/about\" component={About}></Route>\n        <Route exact path=\"/welcome\" component={Welcome}></Route>\n      </Switch>\n    </BrowserRouter>\n  </div>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}